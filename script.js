// ðŸ”¥ Firebase Authentication ile giriÅŸ kontrolÃ¼
firebase.auth().onAuthStateChanged(user => {
    if (user) {
        console.log("GiriÅŸ yapan:", user.displayName);
        loadNotes(); // KullanÄ±cÄ± giriÅŸ yaptÄ±ysa notlarÄ± yÃ¼kle
    } else {
        console.log("GiriÅŸ yapan kullanÄ±cÄ± yok.");
        document.getElementById("notesList").innerHTML = "<p>LÃ¼tfen giriÅŸ yapÄ±n.</p>";
    }
});

// ðŸ“Œ Google ile giriÅŸ yap
function googleLogin() {
    let provider = new firebase.auth.GoogleAuthProvider();
    
    firebase.auth().signInWithPopup(provider)
        .then(result => {
            let user = result.user;
            console.log("GiriÅŸ baÅŸarÄ±lÄ±:", user.displayName);
            alert("HoÅŸ geldin, " + user.displayName);
        })
        .catch(error => {
            console.error("GiriÅŸ hatasÄ±:", error);
        });
}

// ðŸ“Œ Ã‡Ä±kÄ±ÅŸ yap
function logout() {
    firebase.auth().signOut().then(() => {
        alert("Ã‡Ä±kÄ±ÅŸ yapÄ±ldÄ±!");
    }).catch(error => {
        console.error("Ã‡Ä±kÄ±ÅŸ hatasÄ±:", error);
    });
}

// ðŸ“Œ Not ekleme fonksiyonu
function addNote() {
    let noteContent = document.getElementById("noteInput").value;
    let user = firebase.auth().currentUser;

    if (user && noteContent.trim() !== "") {
        firebase.firestore().collection("notlar").add({
            uid: user.uid,
            content: noteContent,
            timestamp: firebase.firestore.FieldValue.serverTimestamp()
        }).then(() => {
            console.log("Not kaydedildi!");
            document.getElementById("noteInput").value = ""; 
        }).catch(error => {
            console.error("Not kaydetme hatasÄ±:", error);
        });
    } else {
        alert("Not eklemek iÃ§in giriÅŸ yapmalÄ±sÄ±nÄ±z!");
    }
}

// ðŸ“Œ NotlarÄ± yÃ¼kleme fonksiyonu (GerÃ§ek ZamanlÄ±)
function loadNotes() {
    let user = firebase.auth().currentUser;
    let notesList = document.getElementById("notesList");

    if (!user) {
        console.log("GiriÅŸ yapmÄ±ÅŸ kullanÄ±cÄ± yok.");
        return;
    }

    firebase.firestore().collection("notlar")
        .where("uid", "==", user.uid)
        .orderBy("timestamp", "desc")
        .onSnapshot(snapshot => {  
            notesList.innerHTML = ""; // Eski notlarÄ± temizle

            if (snapshot.empty) {
                notesList.innerHTML = "<p>HenÃ¼z not yok.</p>";
                return;
            }

            snapshot.docs.forEach(doc => {
                let note = doc.data();
                let noteItem = document.createElement("div");
                noteItem.classList.add("note-container");

                let formattedDate = note.timestamp ? new Date(note.timestamp.toDate()).toLocaleString() : "Tarih yok";

                noteItem.innerHTML = `
                    <p>${note.content}</p>
                    <small>${formattedDate}</small> 
                    <button onclick="deleteNote('${doc.id}')">Sil</button>
                    <button onclick="editNote('${doc.id}', '${JSON.stringify(note.content)}')">DÃ¼zenle</button>
                `;
                notesList.appendChild(noteItem);
            });
        });
}

// ðŸ“Œ Not silme fonksiyonu
function deleteNote(noteId) {
    firebase.firestore().collection("notlar").doc(noteId).delete()
        .then(() => {
            console.log("Not silindi!");
        })
        .catch(error => {
            console.error("Not silme hatasÄ±:", error);
        });
}

// ðŸ“Œ Sayfa yÃ¼klendiÄŸinde notlarÄ± yÃ¼kle
document.addEventListener("DOMContentLoaded", () => {
    let user = firebase.auth().currentUser;
    if (user) {
        loadNotes();
    }
});

//edit note
let currentNoteId = null; // DÃ¼zenlenecek notun ID'si

function editNote(noteId, currentContent) {
    document.getElementById("editNoteContainer").style.display = "block";
    document.getElementById("editNoteInput").value = JSON.parse(currentContent) || '';
    currentNoteId = noteId;
}

function saveEdit() {
    let newContent = document.getElementById("editNoteInput").value;
    if (newContent.trim() !== "") {
        // Firebase veritabanÄ±nda gÃ¼ncelleme yap
        firebase.firestore().collection("notlar").doc(currentNoteId).update({
            content: newContent
        }).then(() => {
            console.log("Not gÃ¼ncellendi!");
            loadNotes(); // NotlarÄ± tekrar yÃ¼kle
            cancelEdit(); // DÃ¼zenleme alanÄ±nÄ± kapat
        }).catch(error => {
            console.error("Not gÃ¼ncelleme hatasÄ±:", error);
        });
    }
}

function cancelEdit() {
    // DÃ¼zenleme alanÄ±nÄ± gizle
    document.getElementById("editNoteContainer").style.display = "none";
}